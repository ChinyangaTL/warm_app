name: Feature/Fix Branch Build

on: workflow_dispatch

env:
  BRANCH: ${{ github.ref_name }}
  AC_USER: Warm_App
  AC_APP: android_prod

jobs:
  run-build-on-appcenter:
    name: Feature/Fix Branch Build
    runs-on: ubuntu-latest

    steps:
      - name: Branch name
        run: echo running on branch $GITHUB_REF_NAME

      - name: Check if exists config for the branch on AppCenter
        id: check-config
        run: |
          CODE=`curl --write-out '%{http_code}' \
              --silent \
              --output /dev/null \
              --request GET \
              --header 'accept: application/json' \
              --header 'X-API-Token: ${{ secrets.APP_CENTER_ACCESS_TOKEN }}' \
              --url 'https://api.appcenter.ms/v0.1/apps/${{ env.AC_USER }}/${{ env.AC_APP }}/branches/${{ env.BRANCH }}/config'`

          if [ $CODE = 200 ] || [ $CODE = 404 ]
          then
            echo $CODE
            echo "::set-output name=code::$CODE"
          else
            echo "CAN'T CHECK IF EXISTS CONFIG"
            exit 1
          fi

      - name: Set config for the branch on AppCenter
        if: ${{ steps.check-config.outputs.code == 404 }}
        run: |
          curl -X 'POST' \
            'https://api.appcenter.ms/v0.1/apps/${{ env.AC_USER }}/${{ env.AC_APP }}/branches/${{ $GITHUB_REF_NAME }}/config' \
            -H 'accept: application/json' \
            -H 'X-API-Token: ${{ secrets.APP_CENTER_ACCESS_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{
            "trigger": "manual",
            "testsEnabled": false,
            "badgeIsEnabled": false,
            "signed": true,
            "environmentVariables": [
              {
                "name": "JAVA_HOME",
                "value": "$(JAVA_HOME_11_X64)"
              }
            ],
            "cloneFromBranch": "string",
            "toolsets": {
              "javascript": {
                "packageJsonPath": "PACKAGE.JSON",
                "runTests": false,
                "reactNativeVersion": "16.x"
              },
              "android": {
                "module": "app",
                "buildVariant": "release",
                "isRoot": false,
                "runTests": false,
                "runLint": false,
                "keystorePassword": ${{ secrets.ANDROID_KEY_STORE_PASSWORD }},
                "keyAlias": ${{ secrets.ANDROID_ALIAS }},
                "keyPassword": ${{ secrets.ANDROID_KEY_PASSWORD }},
                "buildBundle": true,
                "gradleWrapperPath": "android/gradlew",
                "automaticSigning": true,
                "keystoreEncoded": ${{ secrets.ANDROID_SIGNING_KEY }},
              }
            }
          }'

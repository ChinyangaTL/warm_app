name: CD - iOS Build

on:
  workflow_dispatch:
    inputs:
      distribution:
        description: 'Distribution'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - AppCenter

jobs:
  ios-build:
    name: iOS Production Build
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ios

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Pods
        run: pod install --repo-update

      - name: Build IOS App
        uses: yukiarrr/ios-build-action@v1.5.0
        with:
          project-path: ios/WarmApp.xcodeproj
          p12-base64: ${{ secrets.IOS_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: 'iPhone Distribution'
          team-id: ${{ secrets.IOS_TEAM_ID }}
          certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          workspace-path: ios/WarmApp.xcworkspace
          scheme: WarmApp

      - name: Upload artefact to App Center
        if: ${{ inputs.distribution }} == 'AppCenter'
        uses: wzieba/AppCenter-Github-Action@v1.3.3
        with:
          appName: ${{ 'WarmApp/PROD_iOS' }}
          token: ${{ secrets.APP_CENTER_TOKEN_PROD_IOS }}
          file: ${{ steps.sign_app.outputs.signedReleaseFile }}
          group: ${{ 'Collaborators' }}
          notifyTesters: true
          debug: false

name: CD - Android Build

on:
  workflow_dispatch:
    inputs:
      distribution:
        description: 'Distribution'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - AppCenter

jobs:
  android-build:
    name: Android Production Build
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Generate Build
        run: cd android && ./gradlew assembleRelease --no-daemon

      - name: Sign Build
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload artefact to App Center
        if: ${{ inputs.distribution }} == 'AppCenter'
        uses: wzieba/AppCenter-Github-Action@v1.3.3
        with:
          appName: ${{ 'WarmApp/PROD_Android' }}
          token: ${{ secrets.APP_CENTER_TOKEN_PROD_ANDROID }}
          file: ${{ steps.sign_app.outputs.signedReleaseFile }}
          notifyTesters: false
          debug: false

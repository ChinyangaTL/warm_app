name: Release Build

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'Version bump (if you are not sure, check RELEASE.md)'
        default: prerelease
        required: true
        options:
          - patch
          - minor
          - major
          - hotfix
          - prerelease
          - prepatch
          - preminor
          - premajor
      skip-bump:
        type: boolean
        description: 'Skip version bump (only if you know what you are doing)'
        default: false
        required: false

env:
  GH_TOKEN: ${{ github.token }}
  BRANCH: dev
  AC_USER: Warm_App
  AC_APP_ANDROID: android_prod
  AC_APP_IOS: ios_production
  CONFIG_BRANCH: feature-branch-config
  VERSION: ${{ inputs.target == 'hotfix' && 'prerelease' || inputs.target }}
  COMMIT: ${{ inputs.target == 'hotfix' && 'hotfix' || ( inputs.target == 'prerelease' || inputs.target == 'prepatch' || inputs.target == 'preminor' || inputs.target == 'premajor' ) && 'prerelease' || 'release' }}

jobs:
  prepare-build:
    name: Feature/Fix Branch Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}

      - name: Bump version
        if: ${{ !inputs.skip-bump }}
        id: bump-version
        run: |
          git config --global user.name "${{ github.triggering_actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          yarn global add np

          yarn np --any-branch --no-tests ${{ env.VERSION }} --branch ${{ env.BRANCH }} --message="${{ env.COMMIT }} v%s"

          NEW_VERSION=`jq .version package.json | sed "s/\"//g"`

          TITLE=`echo ${COMMIT:0:1} | tr  '[a-z]' '[A-Z]'`${COMMIT:1}
          PR_TITLE="$TITLE v$NEW_VERSION"

          PR_URL=`gh pr create --base main --head ${{ env.BRANCH }} --title="$PR_TITLE" --body="$PR_TITLE" --assignee=@me --label=${{ env.COMMIT }}`

          if [ {{ env.COMMIT }} = "hotfix" ] || [ {{ env.COMMIT }} = "prerelease" ]
          then
            RELEASE_URL=`gh release create v$NEW_VERSION --generate-notes --draft --prerelease`
          else
            RELEASE_URL=`gh release create v$NEW_VERSION --generate-notes --draft`
          fi

          echo "::set-output name=new_version::$NEW_VERSION"
          echo "::set-output name=pr_url::$PR_URL"
          echo "::set-output name=release_url::$RELEASE_URL"

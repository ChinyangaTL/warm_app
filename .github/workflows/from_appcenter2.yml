name: Post Build Status from AppCenter to Slack

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch that triggered the build'
        required: true
        type: string
      commit_id:
        description: 'The commit id that triggered the build'
        required: true
        type: string
      build_id:
        description: 'The build id'
        required: true
        type: string
      os:
        description: 'The OS target of the build'
        required: true
        type: choice
        options:
          - ios
          - android
      status:
        description: 'The build status from AppCenter'
        required: true
        type: choice
        options:
          - Succeeded
          - Failed

env:
  GH_TOKEN: ${{ github.token }}
  AC_USER: holdedtech
  AC_APP_ANDROID: next-gen-dev-android
  AC_APP_IOS: next-gen-dev-ios

jobs:
  from-app-center:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Commit Author
        id: commit-author
        run: |
          COMMIT_AUTHOR=`gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/commits/${{ inputs.commit_id }} --jq '.author.login'`

          echo "commit_author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT

      - name: Slack ID
        id: slack
        run: |
          CONTRIBUTOR=`jq .${{ steps.commit-author.outputs.commit_author }} .github/actions/appcenter-build/contributors.json | sed "s/\"//g"`

          if [ $CONTRIBUTOR = null ]
          then
            echo "❌ ${{ steps.commit-author.outputs.commit_author }} is not added in slack_gh.json"
            echo "Please, check ${{ github.server_url }}/${{ github.repository }}/CONTRIBUTING.md#slack-integration, to add your Slack ID to receive notifications."
            exit 1
          else
            echo "slack_id=$CONTRIBUTOR" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        run: |
          APP=$([[ ${{ inputs.os }} = "ios" ]] && echo ${{ env.AC_APP_IOS }} || echo ${{ env.AC_APP_ANDROID }})

          if [ ${{ inputs.status }} = "Succeeded" ]
          then
            SLACK_MESSAGE=`curl --write-out '%{http_code}' \
                --silent \
                --output /dev/null \
                --request POST \
                --header 'Content-Type: application/json' \
                --url '${{ secrets.SLACK_URL }}' \
                --data '{
                  "text": ":white_check_mark:   *Build Succeeded*\n\nHey <@${{ steps.slack.outputs.slack_id }}>, your build for the \`${{ inputs.branch }}\` branch is ready.\n\n<https://appcenter.ms/orgs/${{ env.AC_USER }}/apps/${{ $APP }}/build/branches/${{ inputs.branch }}/builds/${{ inputs.build_id }}|Here you can check the report> inside AppCenter.",
                }'`          
          else
            SLACK_MESSAGE=`curl --write-out '%{http_code}' \
                --silent \
                --output /dev/null \
                --request POST \
                --header 'Content-Type: application/json' \
                --url '${{ secrets.SLACK_URL }}' \
                --data '{
                  "text": ":x:   *Build Failed*\n\nHey <@${{ steps.slack.outputs.slack_id }}>, your build for the \`${{ inputs.branch }}\` branch has failed.\n\n<https://appcenter.ms/orgs/${{ env.AC_USER }}/apps/${{ $APP }}/build/branches/${{ inputs.branch }}/builds/${{ inputs.build_id }}|Here you can check the report> inside AppCenter.",
                }'`          
          fi
